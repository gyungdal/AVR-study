;/*
; * sr04.c
; *
; * Created: 2016-09-06 ¿ÀÈÄ 2:44:42
; * Author: ±è°æ½Ä007
; */
;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <lcd.h>
;#include <stdio.h>
;#define TRIGGER PORTD.1
;#asm
;PCODE: $0000000D VOL: 0
    .equ __lcd_port = 0x1b
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 000F #endasm
;
;
;char str_value[16];
;long distance;
;int catch;
;void main(void){
; 0000 0015 void main(void){

	.CSEG
;PCODE: $00000010 VOL: 0
; 0000 0016     DDRD = 0b00000010;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0017     TRIGGER = 0;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0018     EIMSK = 0x01;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0019     EICRA = 0x02;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 001A     TIMSK = 0x01;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 001B     TCCR0 = 0x0;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 001C     lcd_init(16);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 001D     lcd_clear();
;PCODE: $0000001F VOL: 0
; 0000 001E     while(1){
;PCODE: $00000020 VOL: 0
; 0000 001F         SREG = 0x0;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0020         TIFR = 0xff;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0021         ASSR = 0x0;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0022         distance = catch = 0;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0023         TCNT0 = 139;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0024         TRIGGER = 1;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0025         delay_ms(1);
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0026         TRIGGER = 0;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0027 
; 0000 0028         while(1){
;PCODE: $00000034 VOL: 0
; 0000 0029             if(catch == 1 || distance >= 300)
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 002A                 break;
;PCODE: $0000003D VOL: 0
; 0000 002B         }
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 002C         lcd_clear();
;PCODE: $00000041 VOL: 0
; 0000 002D         lcd_gotoxy(6,1);
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 002E         sprintf(str_value, "%03d", distance);
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 002F         lcd_puts(str_value);
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0030     }
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0031 }
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;
;interrupt [TIM0_OVF] void timer_int0(void){
; 0000 0033 interrupt [17] void timer_int0(void){
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0034     TCNT0 = 139;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0035     distance++;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0036 }
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;
;interrupt [EXT_INT0] void external_int0(void){
; 0000 0038 interrupt [2] void external_int0(void){
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0039     TCCR0 = 0x0;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 003A     catch = 1;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 003B }
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
