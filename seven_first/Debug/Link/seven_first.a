;/*
; * seven_first.c
; *
; * Created: 2016-04-19 오후 2:04:36
; * Author: GyungDal
; */
;
;/*
; * seven_first.c
; *
; * Created: 2016-04-19 오후 2:04:36
; * Author: GyungDal
; */
;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;#define H 1
;#define L 0
;
;#define TRUE 1
;#define FALSE 0
;
;#define RS PORTB.0
;#define RW PORTB.1
;#define E PORTB.2
;#define DATA PORTD
;
;#define INTERFACE_8BIT 0x30
;#define INTERFACE_4BIT 0x20
;#define LINE_1 0x20
;#define LINE_2 0x28
;
;unsigned char FUNCTION_SET = INTERFACE_8BIT | LINE_2;
;
;#define LEFT_SHIFT 0x07
;#define RIGHT_SHIFT 0x05
;#define SHIFT_OFF 0x00
;
;unsigned char ENTRY_SET = RIGHT_SHIFT;
;
;#define DISPLAY_ON 0x0c
;#define DISPLAY_OFF 0x08
;#define CUSER_ON 0x0a
;#define CURSER_OFF 0x08
;#define CURSER_BLANK_ON 0x09
;#define CURSER_BLANK_OFF 0x08
;
;unsigned char DISPLAY_SET = DISPLAY_ON | CURSER_OFF | CURSER_BLANK_OFF;
;
;#define CLEAR 0x01
;#define RETURN_HOME 0x02
;
;void portSet(void){
; 0000 0036 void portSet(void){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0037     DDRB = 0xff;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0038     DDRD = 0xff;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0039 
; 0000 003A     PORTB = 0x00;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 003B     PORTD = 0x00;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 003C }
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;
;void instructionSet(unsigned char data){
; 0000 003E void instructionSet(unsigned char data){
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 003F     RS = L;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;	data -> R17
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0040     RW = L;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0041     delay_ms(1);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0042     E = H;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0043     DATA = data;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0044     delay_ms(1);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0045     E = L;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0046     RS = L;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0047     RW = L;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0048     delay_ms(1);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0049 }
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;
;void charPosition(int x, int y){
; 0000 004B void charPosition(int x, int y){
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 004C     unsigned char position;
; 0000 004D     if(y > 1) y = 1;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;	x -> R20,R21
;	y -> R18,R19
;	position -> R17
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 004E     if(x > 15) x = 15;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 004F     position = y ? x + 0xc0 : x + 0x80;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0050     instructionSet(position);
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0051 }
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;
;void charDisplay(char display){
; 0000 0053 void charDisplay(char display){
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0054     RW = L;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;	display -> R17
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0055     RS = H;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0056     delay_ms(1);
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0057     E = H;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0058     delay_ms(1);
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0059     DATA = display;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 005A     delay_ms(1);
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 005B     RW = L;
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 005C     RS = H;
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 005D     E = L;
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 005E     delay_ms(1);
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 005F }
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;
;void stringDisplay(char* str){
; 0000 0061 void stringDisplay(char* str){
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 0062     while(*str){
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;	*str -> R16,R17
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0063         charDisplay(*(str++));
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 0064     }
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 0065 }
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;
;void initLCD(void){
; 0000 0067 void initLCD(void){
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0068     delay_ms(15);
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0069     instructionSet(FUNCTION_SET);
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 006A     instructionSet(DISPLAY_SET);
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 006B     instructionSet(CLEAR);
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 006C }
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;
;void main(void){
; 0000 006E void main(void){
;PCODE: $0000009C VOL: 0
; 0000 006F     char *str = "TEST!!!";
; 0000 0070     portSet();
;	*str -> R16,R17
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0071     initLCD();
;PCODE: $000000A1 VOL: 0
; 0000 0072 
; 0000 0073     charPosition(0,0);
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 0074     stringDisplay(str);
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 0075     while(TRUE){
;PCODE: $000000A9 VOL: 0
; 0000 0076     }
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 0077 }
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0

	.DSEG
_0x23:
	.BYTE 0x8
