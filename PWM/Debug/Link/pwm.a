;/*
; * pwm.c
; *
; * Created: 2016-08-30 오후 2:57:19
; * Author: 김경식007
; */
;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <lcd.h>
;#include <stdio.h>
;
;#asm
;PCODE: $0000000D VOL: 0
    .equ __lcd_port = 0x1b
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 000F #endasm
;
;void SetTimer1(short A, short B){
; 0000 0011 void SetTimer1(short A, short B){

	.CSEG
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0012     OCR1AL = ((A << 8) >> 16);
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;	A -> R18,R19
;	B -> R16,R17
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0013     OCR1AH = (A >> 8);
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0014     OCR1BL = ((B << 8) >> 16);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0015     OCR1BH = (B >> 8);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0016 }
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;
;void SetTimer3(short A, short B){
; 0000 0018 void SetTimer3(short A, short B){
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0019     OCR3AL = ((A << 8) >> 16);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;	A -> R18,R19
;	B -> R16,R17
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 001A     OCR3AH = (A >> 8);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 001B     OCR3BL = ((B << 8) >> 16);
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 001C     OCR3BH = (B >> 8);
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 001D }
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;
;char str_value[16];
;int value, key;
;void main(void){
; 0000 0021 void main(void){
;PCODE: $00000040 VOL: 0
; 0000 0022     DDRF = 0xf0;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0023     DDRA = DDRE = DDRB = 0xff;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0024 //    TCCR0 = 0x7d;
; 0000 0025     TCCR1A = 0xa3;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0026     TCCR1B = 0x05;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0027     TCCR3A = 0xa3;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0028     TCCR3B = 0x05;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0029     SREG = 0x80;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 002A     ADCSRA = 0x87;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 002B     //OCR0 = 0; // 정지
; 0000 002C     SetTimer3(0,0);
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 002D     SetTimer1(0,0);
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 002E 
; 0000 002F     //lcd_init(16);
; 0000 0030     //lcd_clear();
; 0000 0031     //lcd_gotoxy(6,1);
; 0000 0032     while (1){
;PCODE: $0000005D VOL: 0
; 0000 0033         ADMUX = 0x00;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0034         ADCSRA=ADCSRA|0x40; //ADSC=1변환 시작
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0035         while((ADCSRA&0x10)==0); //ADIF=1이 될떄까지
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0036         value = (int)((((int)ADCL+((int)ADCH<<8))/1024.0)*254); //A/D변환값 읽기
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0037 
; 0000 0038         ADMUX = 0x01;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 0039         ADCSRA=ADCSRA|0x40; //ADSC=1변환 시작
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 003A         while((ADCSRA&0x10)==0); //ADIF=1이 될떄까지
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 003B         key = (int)((((int)ADCL+((int)ADCH<<8))/1024.0)*254); //A/D변환값 읽기
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 003C 
; 0000 003D         //SetTimer1(255 * 255, 0);
; 0000 003E         //SetTimer3(0, 30000);
; 0000 003F 
; 0000 0040         OCR1A = value * value;
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 0041         OCR1B = 0;
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0042         if(key > 128){
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0043             OCR3BH = OCR1AH;
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0044             OCR3BL = OCR1AL;
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 0045             OCR3AH = OCR1BH;
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 0046             OCR3AL = OCR1BL;
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 0047         }else{
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0048             OCR3BH = OCR1BH;
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 0049             OCR3BL = OCR1BL;
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 004A             OCR3AH = OCR1AH;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 004B             OCR3AL = OCR1AL;
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 004C         }
;PCODE: $000000A9 VOL: 0
; 0000 004D 
; 0000 004E         //SetTimer1(100 * 100, 0);
; 0000 004F         //SetTimer3(30000, 0);
; 0000 0050         //lcd_clear();
; 0000 0051         //lcd_gotoxy(6,1);
; 0000 0052         //sprintf(str_value, "%03d, %03d", (255 - value), key);
; 0000 0053         //lcd_puts(str_value);
; 0000 0054    }
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 0055 }
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
